If you need to override a default setting in the @grails-app/conf/DefaultSecurityConfig.groovy file, you can do that under  @grails-app/conf/Config.groovy@. The earlier Acegi plug-in used its own configuration file, @SecurityConfig.groovy@, but this plug-in maintains its configuration in the standard @Config.groovy@ file. This structure enables environment-specific configuration, for example, if you want less structure restrictive security rules when developing than when you deploy to production. Like any environment-specific config parameters, just wrap them in an @environments@ block.

{note}
The plug-in's configuration values all start with @grails.plugins.springsecurity@ to distinguish them from similarly named options in Grails and other plug-ins. In the documentation if you see an attribute such as @password.algorithm@, you would specify it as 

{code}
grails.plugins.springsecurity.password.algorithm='SHA-512'
{code}

in @Config.groovy@
{note}

See [Chapter 6|guide:6. Configuration] for a detailed discussion about the various general configuration options and [Chapter 10|guide:10. Extending and Configuring the Plug-in] for options for specific features.
